# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{controller}
# Include{controllerStatefullset}
# Include{replicas}
# Include{replica1}
# Include{strategy}
# Include{recreate}
# Include{controllerExpert}
# Include{controllerExpertExtraArgs}
# Include{containerConfig}
  - variable: mariadbDatabase
    group: "App Configuration"
    label: "Database Name"
    schema:
      type: string
      default: "panel"
      required: true
  - variable: mariadbHost
    group: "App Configuration"
    label: "Database Server Hostname or IP Address"
    schema:
      type: string
      default: "mariadb.ix-mariadb.svc.cluster.local"
      required: true
  - variable: mariadbPort
    group: "App Configuration"
    label: "Database Server Port"
    schema:
      type: int
      default: 3306
      required: true
  - variable: mariadbPassword
    group: "App Configuration"
    label: "Database Password"
    schema:
      type: string
      default: ""
      required: true
  - variable: redisHost
    group: "App Configuration"
    label: "Redis Server Hostname or IP Address"
    schema:
      type: string
      default: "redis.ix-redis.svc.cluster.local"
      required: true
  - variable: redisPassword
    group: "App Configuration"
    label: "Redis Server Password"
    schema:
      type: string
      default: ""
      required: true
  - variable: appURL
    group: "App Configuration"
    label: "Pterodactyl URL"
    schema:
      type: string
      default: "http://panel.example.com"
      required: true
# Include{serviceRoot}
# Include{serviceSelector}
# Include{advancedPortTCP}
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
# Include{ingressList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: true
# Include{securityContextAdvanced}
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 568
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{documentation}
