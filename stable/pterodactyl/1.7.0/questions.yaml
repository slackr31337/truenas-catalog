groups:
  - description: "Pterodactyl Panel App configuration"
    name: "Configuration"
  - description: "Configure workload deployment"
    name: "Controller"
  - description: "Configure storage for Pterodactyl Panel App"
    name: "Storage"
  - description: "Networking Configuration for Pterodactyl Panel App"
    name: "Networking"
  - name: "Networking and Services"
    description: "Configure Network and Services for container"
  - description: "Configure DNS settings"
    name: "Advanced DNS Settings"
  - description: "Set CPU/memory limits for Kubernetes Pod"
    name: "Resource Limits"
  - name: "Storage and Persistence"
    description: "Persist and share data that is separate from the container"
  - name: "Ingress"
    description: "Ingress Configuration"
  - name: "Security and Permissions"
    description: "Configure security context and permissions"
  - name: "Resources and Devices"
    description: "Specify resources/devices to be allocated to workload"
  - name: "Middlewares"
    description: "Traefik Middlewares"
  - name: "Metrics"
    description: "Metrics"
  - name: "Addons"
    description: "Addon Configuration"
  - name: "Advanced"
    description: "Advanced Configuration"

portals:
  open:
    host:
      - $kubernetes-resource_configmap_portal_host
    ports:
      - $kubernetes-resource_configmap_portal_port
    protocols:
      - $kubernetes-resource_configmap_portal_protocol

questions:
  - group: "Controller"
    label: "global settings"
    schema:
      attrs:
        - label: "flag this is SCALE"
          schema:
            default: true
            hidden: true
            type: boolean
          variable: isSCALE
      hidden: true
      type: dict
    variable: global
  - group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      attrs:
        - label: "Show Advanced Controller Settings"
          schema:
            default: false
            show_subquestions_if: true
            subquestions:
              - description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  default: deployment
                  enum:
                    - description: Deployment
                      value: deployment
                    - description: Statefulset
                      value: statefulset
                    - description: Daemonset
                      value: daemonset
                  required: true
                  type: string
                variable: type
              - description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  default: 1
                  required: true
                  type: int
                variable: replicas
              - description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  default: Recreate
                  enum:
                    - description: "Recreate: Kill existing pods before creating new ones"
                      value: Recreate
                    - description: "RollingUpdate: Create new pods and then kill old ones"
                      value: RollingUpdate
                    - description: "(Legacy) OnDelete: ignore .spec.template changes"
                      value: OnDelete
                  required: true
                  type: string
                variable: strategy
            type: boolean
          variable: advanced
        - label: "Show Expert Configuration Options"
          schema:
            default: false
            show_subquestions_if: true
            subquestions:
              - label: "Extra Args"
                schema:
                  default: []
                  items:
                    - label: arg
                      schema:
                        type: string
                      variable: arg
                  type: list
                variable: extraArgs
              - label: "Controller Labels"
                schema:
                  default: []
                  items:
                    - label: Label
                      schema:
                        additional_attrs: true
                        attrs:
                          - label: Name
                            schema:
                              type: string
                            variable: name
                          - label: Value
                            schema:
                              type: string
                            variable: value
                        type: dict
                      variable: labelItem
                  type: list
                variable: labelsList
              - label: " Controller Annotations"
                schema:
                  default: []
                  items:
                    - label: Label
                      schema:
                        additional_attrs: true
                        attrs:
                          - label: Name
                            schema:
                              type: string
                            variable: name
                          - label: Value
                            schema:
                              type: string
                            variable: value
                        type: dict
                      variable: annotationItem
                  type: list
                variable: annotationsList
            type: boolean
          variable: expert
      type: dict
    variable: controller
  - group: "Networking"
    label: "Web Port for Pterodactyl Panel"
    schema:
      default: 28080
      max: 65535
      min: 8000
      required: true
      type: int
    variable: web_port
  - description: "Configure timezone for Pterodactyl Panel"
    group: "Configuration"
    label: "Configure timezone"
    schema:
      $ref:
        - definitions/timezone
      type: string
    variable: timezone
  - group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      attrs:
        - description: "The Primary service on which the healthcheck runs, often the webUI"
          label: "Main Service"
          schema:
            additional_attrs: true
            attrs:
              - label: "Enable the service"
                schema:
                  default: true
                  hidden: true
                  type: boolean
                variable: enabled
              - description: "ClusterIP's are only internally available, nodePorts expose the container to the host node System, Loadbalancer exposes the service using the system loadbalancer"
                label: "Service Type"
                schema:
                  default: Simple
                  enum:
                    - description: Simple
                      value: Simple
                    - description: ClusterIP
                      value: ClusterIP
                    - description: "NodePort (Advanced)"
                      value: NodePort
                    - description: "LoadBalancer (Advanced)"
                      value: LoadBalancer
                  type: string
                variable: type
              - description: LoadBalancerIP
                label: "LoadBalancer IP"
                schema:
                  default: ""
                  show_if:
                    - - type
                      - "="
                      - LoadBalancer
                  type: string
                variable: loadBalancerIP
              - description: "External IP's"
                label: "External IP's"
                schema:
                  default: []
                  items:
                    - label: "External IP"
                      schema:
                        type: string
                      variable: externalIP
                  show_if:
                    - - type
                      - "="
                      - LoadBalancer
                  type: list
                variable: externalIPs
              - description: "(Advanced) Specify the ip policy"
                label: "IP Family Policy"
                schema:
                  default: SingleStack
                  enum:
                    - description: SingleStack
                      value: SingleStack
                    - description: PreferDualStack
                      value: PreferDualStack
                    - description: RequireDualStack
                      value: RequireDualStack
                  show_if:
                    - - type
                      - "!="
                      - Simple
                  type: string
                variable: ipFamilyPolicy
              - description: "(advanced) The ip families that should be used"
                label: "(advanced) IP families"
                schema:
                  default: []
                  items:
                    - label: "IP family"
                      schema:
                        type: string
                      variable: ipFamily
                  show_if:
                    - - type
                      - "!="
                      - Simple
                  type: list
                variable: ipFamilies
              - label: "Service's Port(s) Configuration"
                schema:
                  additional_attrs: true
                  attrs:
                    - label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        attrs:
                          - description: "This port exposes the container port on the service"
                            label: Port
                            schema:
                              default: 8080
                              editable: true
                              required: true
                              type: int
                            variable: port
                          - label: "Show Advanced settings"
                            schema:
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - label: "Port Type"
                                  schema:
                                    default: HTTP
                                    enum:
                                      - description: HTTP
                                        value: HTTP
                                      - description: HTTPS
                                        value: HTTPS
                                      - description: TCP
                                        value: TCP
                                      - description: UDP
                                        value: UDP
                                    type: string
                                  variable: protocol
                                - description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  label: "Node Port (Optional)"
                                  schema:
                                    max: 65535
                                    min: 9000
                                    type: int
                                  variable: nodePort
                                - description: "The internal(!) port on the container the Application runs on"
                                  label: "Target Port"
                                  schema:
                                    default: 80
                                    type: int
                                  variable: targetPort
                              type: boolean
                            variable: advanced
                        type: dict
                      variable: main
                  type: dict
                variable: ports
            type: dict
          variable: main
        - group: "Networking and Services"
          label: dnsPolicy
          schema:
            default: ""
            enum:
              - description: Default
                value: ""
              - description: ClusterFirst
                value: ClusterFirst
              - description: ClusterFirstWithHostNet
                value: ClusterFirstWithHostNet
              - description: None
                value: None
            type: string
          variable: dnsPolicy
        - description: "Specify custom DNS configuration which will be applied to the pod"
          group: "Networking and Services"
          label: "DNS Configuration"
          schema:
            additional_attrs: true
            attrs:
              - label: Nameservers
                schema:
                  default: []
                  items:
                    - label: Nameserver
                      schema:
                        type: string
                      variable: nameserver
                  type: list
                variable: nameservers
              - label: options
                schema:
                  default: []
                  items:
                    - label: "Option Entry"
                      schema:
                        additional_attrs: true
                        attrs:
                          - label: Name
                            schema:
                              type: string
                            variable: name
                          - label: Value
                            schema:
                              type: string
                            variable: value
                        type: dict
                      variable: option
                  type: list
                variable: options
              - label: Searches
                schema:
                  default: []
                  items:
                    - label: "Search Entry"
                      schema:
                        type: string
                      variable: search
                  type: list
                variable: searches
            type: dict
          variable: dnsConfig
      type: dict
    variable: service
  - group: "Ingress"
    label: ""
    schema:
      additional_attrs: true
      attrs:
        - label: "Main Ingress"
          schema:
            additional_attrs: true
            attrs:
              - label: "Enable Ingress"
                schema:
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - label: Hosts
                      schema:
                        default: []
                        items:
                          - label: Host
                            schema:
                              additional_attrs: true
                              attrs:
                                - label: HostName
                                  schema:
                                    default: ""
                                    required: true
                                    type: string
                                  variable: host
                                - label: Paths
                                  schema:
                                    default: []
                                    items:
                                      - label: Host
                                        schema:
                                          additional_attrs: true
                                          attrs:
                                            - label: path
                                              schema:
                                                default: /
                                                required: true
                                                type: string
                                              variable: path
                                            - label: pathType
                                              schema:
                                                default: Prefix
                                                required: true
                                                type: string
                                              variable: pathType
                                          type: dict
                                        variable: pathEntry
                                    type: list
                                  variable: paths
                              type: dict
                            variable: hostEntry
                        type: list
                      variable: hosts
                    - label: TLS-Settings
                      schema:
                        default: []
                        items:
                          - label: Host
                            schema:
                              additional_attrs: true
                              attrs:
                                - label: "Certificate Hosts"
                                  schema:
                                    default: []
                                    items:
                                      - label: Host
                                        schema:
                                          default: ""
                                          required: true
                                          type: string
                                        variable: host
                                    type: list
                                  variable: hosts
                                - label: "Select TrueNAS SCALE Certificate"
                                  schema:
                                    $ref:
                                      - definitions/certificate
                                    type: int
                                  variable: scaleCert
                              type: dict
                            variable: tlsEntry
                        type: list
                      variable: tls
                    - description: "Entrypoint used by Traefik when using Traefik as Ingress Provider"
                      label: "(Advanced) Traefik Entrypoint"
                      schema:
                        default: websecure
                        required: true
                        type: string
                      variable: entrypoint
                    - description: "Add previously created Traefik Middlewares to this Ingress"
                      label: "Traefik Middlewares"
                      schema:
                        default: []
                        items:
                          - label: Name
                            schema:
                              default: ""
                              required: true
                              type: string
                            variable: name
                        type: list
                      variable: middlewares
                  type: boolean
                variable: enabled
              - label: "Show Expert Configuration Options"
                schema:
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - description: "These middlewares enforce a number of best practices."
                      label: "Enable Default Middlewares"
                      schema:
                        default: true
                        type: boolean
                      variable: enableFixedMiddlewares
                    - label: "IngressClass Name"
                      schema:
                        default: ""
                        type: string
                      variable: ingressClassName
                    - label: Labels
                      schema:
                        default: []
                        items:
                          - label: Label
                            schema:
                              additional_attrs: true
                              attrs:
                                - label: Name
                                  schema:
                                    type: string
                                  variable: name
                                - label: Value
                                  schema:
                                    type: string
                                  variable: value
                              type: dict
                            variable: labelItem
                        type: list
                      variable: labelsList
                    - label: Annotations
                      schema:
                        default: []
                        items:
                          - label: Label
                            schema:
                              additional_attrs: true
                              attrs:
                                - label: Name
                                  schema:
                                    type: string
                                  variable: name
                                - label: Value
                                  schema:
                                    type: string
                                  variable: value
                              type: dict
                            variable: annotationItem
                        type: list
                      variable: annotationsList
                  type: boolean
                variable: expert
            type: dict
          variable: main
      type: dict
    variable: ingress
  - description: "User ID of the storage volume being used (application will chown the storage volume path with specified UID)"
    group: "Configuration"
    label: "Storage User ID"
    schema:
      default: 568
      max: 65535
      min: 1
      type: int
    variable: ownerUID
  - description: "Group ID of the storage volume being used (application will chown the storage volume path with specified GID)"
    group: "Configuration"
    label: "Storage Group ID"
    schema:
      default: 568
      max: 65535
      min: 1
      type: int
    variable: ownerGID
  - group: "Configuration"
    label: "Pterodactyl Panel Environment"
    schema:
      default: []
      items:
        - label: "Environment Variable"
          schema:
            attrs:
              - label: Name
                schema:
                  type: string
                variable: name
              - label: Value
                schema:
                  type: string
                variable: value
            type: dict
          variable: environmentVariable
      type: list
    variable: environmentVariables
  - group: "Storage"
    label: "Pterodactyl Panel App Storage"
    schema:
      attrs:
        - label: "Storage Volume for Pterodactyl Panel App"
          schema:
            attrs:
              - label: "Pterodactyl Panel App Storage Volume Dataset Name"
                schema:
                  $ref:
                    - normalize/ixVolume
                  default: ix-config
                  editable: false
                  hidden: true
                  show_if:
                    - - hostPathEnabled
                      - "="
                      - false
                  type: string
                variable: datasetName
              - description: "Path where the volume will be mounted inside the pod"
                label: "Configuration Storage Mount Path"
                schema:
                  default: /app/var
                  editable: true
                  hidden: true
                  type: path
                variable: mountPath
              - label: "Enable Custom Host Path for Pterodactyl Panel App Storage Volume"
                schema:
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - label: "Host Path for Pterodactyl Panel App Storage Volume"
                      schema:
                        required: true
                        type: hostpath
                      variable: hostPath
                  type: boolean
                variable: hostPathEnabled
            type: dict
          variable: config
        - label: "Storage Volume for Nginx"
          schema:
            attrs:
              - label: "Nginx Storage Volume Dataset Name"
                schema:
                  $ref:
                    - normalize/ixVolume
                  default: ix-nginx
                  editable: false
                  hidden: true
                  show_if:
                    - - hostPathEnabled
                      - "="
                      - false
                  type: string
                variable: datasetName
              - description: "Path where the volume will be mounted inside the pod"
                label: "Nginx Storage Mount Path"
                schema:
                  default: /etc/nginx/http.d
                  editable: true
                  hidden: true
                  type: path
                variable: mountPath
              - label: "Enable Custom Host Path for Nginx Storage Volume"
                schema:
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - label: "Host Path for Nginx Storage Volume"
                      schema:
                        required: true
                        type: hostpath
                      variable: hostPath
                  type: boolean
                variable: hostPathEnabled
            type: dict
          variable: nginx
        - label: "Storage Volume for App Logs"
          schema:
            attrs:
              - label: "Logs Storage Volume Dataset Name"
                schema:
                  $ref:
                    - normalize/ixVolume
                  default: ix-app_logs
                  editable: false
                  hidden: true
                  show_if:
                    - - hostPathEnabled
                      - "="
                      - false
                  type: string
                variable: datasetName
              - description: "Path where the volume will be mounted inside the pod"
                label: "Logs Storage Mount Path"
                schema:
                  default: /app/storage/logs
                  editable: true
                  hidden: true
                  type: path
                variable: mountPath
              - label: "Enable Custom Host Path for Logs Storage Volume"
                schema:
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - label: "Host Path for Logs Storage Volume"
                      schema:
                        required: true
                        type: hostpath
                      variable: hostPath
                  type: boolean
                variable: hostPathEnabled
            type: dict
          variable: logs
      type: dict
    variable: appVolumeMounts
  - group: "Storage"
    label: "Extra Host Path Volumes"
    schema:
      items:
        - description: "Add an extra host path volume for Pterodactyl application"
          label: "Host Path Volume"
          schema:
            attrs:
              - description: "Path where the volume will be mounted inside the pod"
                label: "Mount Path in Pod"
                schema:
                  required: true
                  type: path
                variable: mountPath
              - description: "Host path"
                label: "Host Path"
                schema:
                  required: true
                  type: hostpath
                variable: hostPath
            type: dict
          variable: extraAppVolume
      type: list
    variable: extraAppVolumeMounts
  - group: "Resource Limits"
    label: "Enable Pod resource limits"
    schema:
      default: false
      type: boolean
    variable: enableResourceLimits
  - description: "CPU resource limit allow  plain integer values with suffix m(milli) e.g 1000m, 100."
    group: "Resource Limits"
    label: "CPU Limit"
    schema:
      default: 4000m
      show_if:
        - - enableResourceLimits
          - "="
          - true
      type: string
      valid_chars: "^\\d+(?:\\.\\d+(?!.*m$)|m?$)"
    variable: cpuLimit
  - description: "Memory limits is specified by number of bytes. Followed by quantity suffix like E,P,T,G,M,k and Ei,Pi,Ti,Mi,Gi,Ki can also be used. e.g 129e6, 129M,  128974848000m, 123Mi"
    group: "Resource Limits"
    label: "Memory Limit"
    schema:
      default: 8Gi
      show_if:
        - - enableResourceLimits
          - "="
          - true
      type: string
      valid_chars: "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
    variable: memLimit

  - group: "Security and Permissions"
    label: "Container Security Settings"
    schema:
      additional_attrs: true
      attrs:
        - description: "By enabling this you override default set values."
          label: "Change PUID / UMASK values"
          schema:
            default: false
            show_subquestions_if: true
            subquestions:
              - description: "When supported by the container, this sets the User ID running the Application Process. Not supported by all Apps"
                label: "Process User ID - PUID"
                schema:
                  default: 568
                  type: int
                variable: PUID
              - description: "When supported by the container, this sets the UMASK for tha App. Not supported by all Apps"
                label: UMASK
                schema:
                  default: "002"
                  type: string
                variable: UMASK
            type: boolean
          variable: editsecurity
      type: dict
    variable: security

  - group: "Security and Permissions"
    label: "Show Advanced Security Settings"
    schema:
      default: false
      show_subquestions_if: true
      subquestions:
        - label: "Security Context"
          schema:
            additional_attrs: true
            attrs:
              - label: "Privileged mode"
                schema:
                  default: false
                  type: boolean
                variable: privileged
              - label: "ReadOnly Root Filesystem"
                schema:
                  default: false
                  type: boolean
                variable: readOnlyRootFilesystem
              - label: "Allow Privilege Escalation"
                schema:
                  default: false
                  type: boolean
                variable: allowPrivilegeEscalation
              - label: runAsNonRoot
                schema:
                  default: false
                  type: boolean
                variable: runAsNonRoot
              - label: Capabilities
                schema:
                  additional_attrs: true
                  attrs:
                    - label: "Drop Capability"
                      schema:
                        default: []
                        items:
                          - label: ""
                            schema:
                              type: string
                            variable: dropEntry
                        type: list
                      variable: drop
                    - label: "Add Capability"
                      schema:
                        default: []
                        items:
                          - label: ""
                            schema:
                              type: string
                            variable: addEntry
                        type: list
                      variable: add
                  type: dict
                variable: capabilities
            type: dict
          variable: securityContext
      type: boolean
    variable: advancedSecurity

  - group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      attrs:
        - description: "The UserID of the user running the application"
          label: runAsUser
          schema:
            default: 0
            type: int
          variable: runAsUser
        - description: 'The groupID this App of the user running the application"'
          label: runAsGroup
          schema:
            default: 0
            type: int
          variable: runAsGroup
        - description: "The group that should own ALL storage."
          label: fsGroup
          schema:
            default: 568
            type: int
          variable: fsGroup
        - label: "When should we take ownership?"
          schema:
            default: OnRootMismatch
            enum:
              - description: OnRootMismatch
                value: OnRootMismatch
              - description: Always
                value: Always
            type: string
          variable: fsGroupChangePolicy
        - label: "supplemental Groups"
          schema:
            default: []
            items:
              - label: "supplemental Group"
                schema:
                  type: int
                variable: supplementalGroupsEntry
            type: list
          variable: supplementalGroups
      type: dict
    variable: podSecurityContext

  - group: "Configuration"
    label: "Pterodactyl Panel Config"
    schema:
      additional_attrs: true
      attrs:
        - label: "Pterodactyl Panel URL"
          schema:
            default: "http://panel.example.com"
            editable: true
            required: true
            type: string
          variable: APP_URL
      type: dict
    variable: pterodactylConfig
