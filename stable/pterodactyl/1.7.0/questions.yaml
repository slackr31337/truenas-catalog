# Include{groups}
portals: {}
questions:
# Include{global}
# Include{controller}
# Include{controllerDeployment}
# Include{replicas}
# Include{replica1}
# Include{strategy}
# Include{recreate}
# Include{controllerExpert}
# Include{controllerExpertExtraArgs}
  - variable: secretEnv
    group: "Container Configuration"
    label: "Image Secrets"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: DB_PASSWORD
          label: "DB_PASSWORD"
          description: "Password used to connect to Mariadb server"
          schema:
            type: string
            default: ""
            required: true
        - variable: REDIS_PASSWORD
          label: "REDIS_PASSWORD"
          description: "Password used to connect to redis server"
          schema:
            type: string
            default: ""
            required: true
  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: DB_DATABASE
          label: "DB_DATABASE"
          description: "Database name"
          schema:
            type: string
            default: "panel"
            required: true
        - variable: DB_HOST
          label: "DB_HOST"
          description: "Mariadb server hostname or IP address"
          schema:
            type: string
            default: "mariadb.ix-mariadb.svc.cluster.local"
        - variable: DB_PORT
          label: "DB_PORT"
          description: "Port used to connect to the Mariadb server"
          schema:
            type: int
            default: 3306
        - variable: REDIS_HOST
          label: "REDIS_HOST"
          description: "Redis server hostname or IP address"
          schema:
            type: str
            default: "redis.ix-redis.svc.cluster.local"
        - variable: APP_URL
          label: "APP_URL"
          description: "Pterodactyl URL"
          schema:
            type: string
            default: "https://pterodactyl.example.com"
# Include{containerConfig}
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceList}
# Include{ingressList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: true
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: true
# Include{securityContextAdvanced}
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 568
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 568
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{documentation}
