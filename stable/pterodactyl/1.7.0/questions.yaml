# Include{groups}
questions:
# Include{global}
# Include{controller}
# Include{controllerStatefullset}
# Include{replicas}
# Include{replica1}
# Include{strategy}
# Include{recreate}
# Include{controllerExpert}
# Include{controllerExpertExtraArgs}
# Include{containerConfig}
  - variable: mariadbDatabase
    group: "App Configuration"
    label: "Database Name"
    schema:
      type: string
      default: "panel"
      required: true
  - variable: mariadbHost
    group: "App Configuration"
    label: "Database Server Hostname or IP Address"
    schema:
      type: string
      default: "mariadb.ix-mariadb.svc.cluster.local"
      required: true
  - variable: mariadbPort
    group: "App Configuration"
    label: "Database Server Port"
    schema:
      type: int
      default: 3306
      required: true
  - variable: mariadbPassword
    group: "App Configuration"
    label: "Database Password"
    schema:
      type: string
      default: ""
      required: true
  - variable: redisHost
    group: "App Configuration"
    label: "Redis Server Hostname or IP Address"
    schema:
      type: string
      default: "redis.ix-redis.svc.cluster.local"
      required: true
  - variable: redisPassword
    group: "App Configuration"
    label: "Redis Server Password"
    schema:
      type: string
      default: ""
      required: true
  - variable: appURL
    group: "App Configuration"
    label: "Pterodactyl URL"
    schema:
      type: string
      default: "http://panel.example.com"
      required: true
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 80
                              required: true
# Include{advancedPortTCP}
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 80
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: app-content
          label: "App Content Storage"
          description: "Stores the Application Content."
          schema:
            additional_attrs: true
            type: dict
            attrs:
        - variable: nginx
          label: "Nginx Storage"
          description: "Stores the Nginx Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
        - variable: logs
          label: "App Logs Storage"
          description: "Stores the Application Logs."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
# Include{ingressList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: true
# Include{securityContextAdvanced}
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 568
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{documentation}
