groups:
  - name: "Configuration"
    description: "Pterodactyl Panel App configuration"
  - name: "Controller"
    description: "Configure workload deployment"
  - name: "Pterodactyl Config"
    description: "Pterodactyl Panel App configuration"
  - name: "Storage"
    description: "Configure storage for Pterodactyl Panel App"
  - name: "Ingress"
    description: "Ingress Configuration"
  - name: "Networking"
    description: "Networking Configuration for Pterodactyl Panel App"
  - name: "Advanced DNS Settings"
    description: "Configure DNS settings"
  - name: "Resource Limits"
    description: "Set CPU/memory limits for Kubernetes Pod"

portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"

questions:
  - variable: global
    label: "global settings"
    group: "Controller"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: isSCALE
          label: "flag this is SCALE"
          schema:
            type: boolean
            default: true
            hidden: true
            
  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
        - variable: expert
          label: "Show Expert Configuration Options"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: extraArgs
                label: "Extra Args"
                schema:
                  type: list
                  default: []
                  items:
                    - variable: arg
                      label: "arg"
                      schema:
                        type: string
              - variable: labelsList
                label: "Controller Labels"
                schema:
                  type: list
                  default: []
                  items:
                    - variable: labelItem
                      label: "Label"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: name
                            label: "Name"
                            schema:
                              type: string
                          - variable: value
                            label: "Value"
                            schema:
                              type: string
              - variable: annotationsList
                label: " Controller Annotations"
                schema:
                  type: list
                  default: []
                  items:
                    - variable: annotationItem
                      label: "Label"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: name
                            label: "Name"
                            schema:
                              type: string
                          - variable: value
                            label: "Value"
                            schema:
                              type: string
                              
  - variable: web_port
    label: "Web Port for Pterodactyl Panel"
    group: Networking
    schema:
      type: int
      min: 8000
      max: 65535
      default: 28080
      required: true

  - variable: timezone
    label: "Configure timezone"
    group: "Configuration"
    description: "Configure timezone for Pterodactyl Panel"
    schema:
      type: string
      $ref:
        - "definitions/timezone"

  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: enabled
                label: "Enable the service"
                schema:
                  type: boolean
                  default: true
                  hidden: true
              - variable: type
                label: "Service Type"
                description: "ClusterIP's are only internally available, nodePorts expose the container to the host node System, Loadbalancer exposes the service using the system loadbalancer"
                schema:
                  type: string
                  default: "Simple"
                  enum:
                    - value: "Simple"
                      description: "Simple"
                    - value: "ClusterIP"
                      description: "ClusterIP"
                    - value: "NodePort"
                      description: "NodePort (Advanced)"
                    - value: "LoadBalancer"
                      description: "LoadBalancer (Advanced)"
              - variable: loadBalancerIP
                label: "LoadBalancer IP"
                description: "LoadBalancerIP"
                schema:
                  show_if: [["type", "=", "LoadBalancer"]]
                  type: string
                  default: ""
              - variable: externalIPs
                label: "External IP's"
                description: "External IP's"
                schema:
                  show_if: [["type", "=", "LoadBalancer"]]
                  type: list
                  default: []
                  items:
                    - variable: externalIP
                      label: "External IP"
                      schema:
                        type: string
              - variable: ipFamilyPolicy
                label: "IP Family Policy"
                description: "(Advanced) Specify the ip policy"
                schema:
                  show_if: [["type", "!=", "Simple"]]
                  type: string
                  default: "SingleStack"
                  enum:
                    - value: "SingleStack"
                      description: "SingleStack"
                    - value: "PreferDualStack"
                      description: "PreferDualStack"
                    - value: "RequireDualStack"
                      description: "RequireDualStack"
              - variable: ipFamilies
                label: "(advanced) IP families"
                description: "(advanced) The ip families that should be used"
                schema:
                  show_if: [["type", "!=", "Simple"]]
                  type: list
                  default: []
                  items:
                    - variable: ipFamily
                      label: "IP family"
                      schema:
                        type: string
              - variable: ports
                label: "Service's Port(s) Configuration"
                schema:
                  additional_attrs: true
                  type: dict
                  attrs:
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 8080
                              editable: true
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: "HTTP"
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 80

  - variable: hostNetwork
    label: "Enable Host Network"
    group: "Networking"
    schema:
      type: boolean
      default: false

        - variable: dnsPolicy
          group: "Networking and Services"
          label: "dnsPolicy"
          schema:
            type: string
            default: ""
            enum:
              - value: ""
                description: "Default"
              - value: "ClusterFirst"
                description: "ClusterFirst"
              - value: "ClusterFirstWithHostNet"
                description: "ClusterFirstWithHostNet"
              - value: "None"
                description: "None"

        - variable: dnsConfig
          label: "DNS Configuration"
          group: "Networking and Services"
          description: "Specify custom DNS configuration which will be applied to the pod"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: nameservers
                label: "Nameservers"
                schema:
                  default: []
                  type: list
                  items:
                    - variable: nameserver
                      label: "Nameserver"
                      schema:
                        type: string
                        
              - variable: options
                label: "options"
                schema:
                  default: []
                  type: list
                  items:
                    - variable: option
                      label: "Option Entry"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: name
                            label: "Name"
                            schema:
                              type: string
                          - variable: value
                            label: "Value"
                            schema:
                              type: string
                              
              - variable: searches
                label: "Searches"
                schema:
                  default: []
                  type: list
                  items:
                    - variable: search
                      label: "Search Entry"
                      schema:
                        type: string


  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: enabled
                label: "Enable Ingress"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hosts
                      label: "Hosts"
                      schema:
                        type: list
                        default: []
                        items:
                          - variable: hostEntry
                            label: "Host"
                            schema:
                              additional_attrs: true
                              type: dict
                              attrs:
                                - variable: host
                                  label: "HostName"
                                  schema:
                                    type: string
                                    default: ""
                                    required: true
                                - variable: paths
                                  label: "Paths"
                                  schema:
                                    type: list
                                    default: []
                                    items:
                                      - variable: pathEntry
                                        label: "Host"
                                        schema:
                                          additional_attrs: true
                                          type: dict
                                          attrs:
                                            - variable: path
                                              label: "path"
                                              schema:
                                                type: string
                                                required: true
                                                default: "/"
                                            - variable: pathType
                                              label: "pathType"
                                              schema:
                                                type: string
                                                required: true
                                                default: "Prefix"

                    - variable: tls
                      label: "TLS-Settings"
                      schema:
                        type: list
                        default: []
                        items:
                          - variable: tlsEntry
                            label: "Host"
                            schema:
                              additional_attrs: true
                              type: dict
                              attrs:
                                - variable: hosts
                                  label: "Certificate Hosts"
                                  schema:
                                    type: list
                                    default: []
                                    items:
                                      - variable: host
                                        label: "Host"
                                        schema:
                                          type: string
                                          default: ""
                                          required: true
                                - variable: scaleCert
                                  label: "Select TrueNAS SCALE Certificate"
                                  schema:
                                    type: int
                                    $ref:
                                      - "definitions/certificate"

                    - variable: entrypoint
                      label: "(Advanced) Traefik Entrypoint"
                      description: "Entrypoint used by Traefik when using Traefik as Ingress Provider"
                      schema:
                        type: string
                        default: "websecure"
                        required: true
                    - variable: middlewares
                      label: "Traefik Middlewares"
                      description: "Add previously created Traefik Middlewares to this Ingress"
                      schema:
                        type: list
                        default: []
                        items:
                          - variable: name
                            label: "Name"
                            schema:
                              type: string
                              default: ""
                              required: true

              - variable: expert
                label: "Show Expert Configuration Options"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: enableFixedMiddlewares
                      description: "These middlewares enforce a number of best practices."
                      label: "Enable Default Middlewares"
                      schema:
                        type: boolean
                        default: true
                    - variable: ingressClassName
                      label: "IngressClass Name"
                      schema:
                        type: string
                        default: ""
                    - variable: labelsList
                      label: "Labels"
                      schema:
                        type: list
                        default: []
                        items:
                          - variable: labelItem
                            label: "Label"
                            schema:
                              additional_attrs: true
                              type: dict
                              attrs:
                                - variable: name
                                  label: "Name"
                                  schema:
                                    type: string
                                - variable: value
                                  label: "Value"
                                  schema:
                                    type: string
                    - variable: annotationsList
                      label: "Annotations"
                      schema:
                        type: list
                        default: []
                        items:
                          - variable: annotationItem
                            label: "Label"
                            schema:
                              additional_attrs: true
                              type: dict
                              attrs:
                                - variable: name
                                  label: "Name"
                                  schema:
                                    type: string
                                - variable: value
                                  label: "Value"
                                  schema:
                                    type: string
                                    
  - variable: ownerUID
    label: "Storage User ID"
    description: "User ID of the storage volume being used (application will chown the storage volume path with specified UID)"
    group: Configuration
    schema:
      type: int
      default: 568
      min: 1
      max: 65535

  - variable: ownerGID
    label: "Storage Group ID"
    description: "Group ID of the storage volume being used (application will chown the storage volume path with specified GID)"
    group: Configuration
    schema:
      type: int
      default: 568
      min: 1
      max: 65535

  - variable: environmentVariables
    label: "Pterodactyl Panel Environment"
    group: "Configuration"
    schema:
      type: list
      default: []
      items:
        - variable: environmentVariable
          label: "Environment Variable"
          schema:
            type: dict
            attrs:
              - variable: name
                label: "Name"
                schema:
                  type: string
              - variable: value
                label: "Value"
                schema:
                  type: string

  - variable: appVolumeMounts
    label: "Pterodactyl Panel App Storage"
    group: "Storage"
    schema:
      type: dict
      attrs:
        - variable: config
          label: "Storage Volume for Pterodactyl Panel App"
          schema:
            type: dict
            attrs:
              - variable: datasetName
                label: "Pterodactyl Panel App Storage Volume Dataset Name"
                schema:
                  type: string
                  hidden: true
                  $ref:
                    - "normalize/ixVolume"
                  show_if: [["hostPathEnabled", "=", false]]
                  default: "ix-config"
                  editable: false
              - variable: mountPath
                label: "Configuration Storage Mount Path"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  hidden: true
                  editable: true
                  default: "/app/var"
              - variable: hostPathEnabled
                label: "Enable Custom Host Path for Pterodactyl Panel App Storage Volume"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPath
                      label: "Host Path for Pterodactyl Panel App Storage Volume"
                      schema:
                        type: hostpath
                        required: true
        - variable: nginx
          label: "Storage Volume for Nginx"
          schema:
            type: dict
            attrs:
              - variable: datasetName
                label: "Nginx Storage Volume Dataset Name"
                schema:
                  type: string
                  hidden: true
                  $ref:
                    - "normalize/ixVolume"
                  show_if: [["hostPathEnabled", "=", false]]
                  default: "ix-nginx"
                  editable: false
              - variable: mountPath
                label: "Nginx Storage Mount Path"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  hidden: true
                  editable: true
                  default: "/etc/nginx/http.d"
              - variable: hostPathEnabled
                label: "Enable Custom Host Path for Nginx Storage Volume"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPath
                      label: "Host Path for Nginx Storage Volume"
                      schema:
                        type: hostpath
                        required: true

        - variable: logs
          label: "Storage Volume for App Logs"
          schema:
            type: dict
            attrs:
              - variable: datasetName
                label: "Logs Storage Volume Dataset Name"
                schema:
                  type: string
                  hidden: true
                  $ref:
                    - "normalize/ixVolume"
                  show_if: [["hostPathEnabled", "=", false]]
                  default: "ix-app_logs"
                  editable: false
              - variable: mountPath
                label: "Logs Storage Mount Path"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  hidden: true
                  editable: true
                  default: "/app/storage/logs"
              - variable: hostPathEnabled
                label: "Enable Custom Host Path for Logs Storage Volume"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hostPath
                      label: "Host Path for Logs Storage Volume"
                      schema:
                        type: hostpath
                        required: true

  - variable: extraAppVolumeMounts
    label: "Extra Host Path Volumes"
    group: "Storage"
    schema:
      type: list
      items:
        - variable: extraAppVolume
          label: "Host Path Volume"
          description: "Add an extra host path volume for Pterodactyl application"
          schema:
            type: dict
            attrs:
              - variable: mountPath
                label: "Mount Path in Pod"
                description: "Path where the volume will be mounted inside the pod"
                schema:
                  type: path
                  required: true
              - variable: hostPath
                label: "Host Path"
                description: "Host path"
                schema:
                  type: hostpath
                  required: true

  - variable: enableResourceLimits
    label: "Enable Pod resource limits"
    group: "Resource Limits"
    schema:
      type: boolean
      default: false
      
  - variable: cpuLimit
    label: "CPU Limit"
    description: "CPU resource limit allow  plain integer values with suffix m(milli) e.g 1000m, 100."
    group: "Resource Limits"
    schema:
      type: string
      show_if: [["enableResourceLimits", "=", true]]
      valid_chars: "^\\d+(?:\\.\\d+(?!.*m$)|m?$)"
      default: "4000m"
      
  - variable: memLimit
    label: "Memory Limit"
    group: "Resource Limits"
    description: "Memory limits is specified by number of bytes. Followed by quantity suffix like E,P,T,G,M,k and Ei,Pi,Ti,Mi,Gi,Ki can also be used. e.g 129e6, 129M,  128974848000m, 123Mi"
    schema:
      type: string
      show_if: [["enableResourceLimits", "=", true]]
      valid_chars: "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$"
      default: "8Gi"


  - variable: security
    label: "Container Security Settings"
    group: "Security and Permissions"
    schema:
      type: dict
      additional_attrs: true
      attrs:
        - variable: editsecurity
          label: "Change PUID / UMASK values"
          description: "By enabling this you override default set values."
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: PUID
                label: "Process User ID - PUID"
                description: "When supported by the container, this sets the User ID running the Application Process. Not supported by all Apps"
                schema:
                  type: int
                  default: 568
              - variable: UMASK
                label: "UMASK"
                description: "When supported by the container, this sets the UMASK for tha App. Not supported by all Apps"
                schema:
                  type: string
                  default: "002"

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
              - variable: capabilities
                label: "Capabilities"
                schema:
                  additional_attrs: true
                  type: dict
                  attrs:
                    - variable: drop
                      label: "Drop Capability"
                      schema:
                        type: list
                        default: []
                        items:
                          - variable: dropEntry
                            label: ""
                            schema:
                              type: string
                    - variable: add
                      label: "Add Capability"
                      schema:
                        type: list
                        default: []
                        items:
                          - variable: addEntry
                            label: ""
                            schema:
                              type: string

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
        - variable: fsGroupChangePolicy
          label: "When should we take ownership?"
          schema:
            type: string
            default: "OnRootMismatch"
            enum:
              - value: "OnRootMismatch"
                description: "OnRootMismatch"
              - value: "Always"
                description: "Always"
        - variable: supplementalGroups
          label: "supplemental Groups"
          schema:
            type: list
            default: []
            items:
              - variable: supplementalGroupsEntry
                label: "supplemental Group"
                schema:
                  type: int
                  
  - variable: pterodactylConfig
    group: "Pterodactyl Config"
    label: "Pterodactyl Panel Config"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: APP_URL
          label: "Pterodactyl Panel URL"
          schema:
            type: string
            default: "http://panel.example.com"
            editable: true
            required: true
